{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Non-Academics\\\\Web_dev\\\\ReactJS\\\\next-meetup app\\\\pages\\\\[meetupId].js\";\nimport MeetupDetails from \"../components/meetups/MeetupDetails\";\n\nfunction MeetupDetail(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    address: \"Some Street 5, Some City\",\n    title: \"The First Meetup\",\n    description: \"This is the first bloody meetup\",\n    image: \"https://upload.wikimedia.org/wikipedia/commons/3/3b/Frauenkirche_and_Neues_Rathaus_Munich_March_2013.JPG\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetail;\nexport var __N_SSG = true;\nexport default MeetupDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetail\");","map":{"version":3,"sources":["D:/Non-Academics/Web_dev/ReactJS/next-meetup app/pages/[meetupId].js"],"names":["MeetupDetails","MeetupDetail","props"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,qCAA1B;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,sBACE,QAAC,aAAD;AACE,IAAA,OAAO,EAAC,0BADV;AAEE,IAAA,KAAK,EAAC,kBAFR;AAGE,IAAA,WAAW,EAAC,iCAHd;AAIE,IAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQD,Y;;AAiDT,eAAeA,YAAf","sourcesContent":["import MeetupDetails from \"../components/meetups/MeetupDetails\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nfunction MeetupDetail(props) {\r\n  return (\r\n    <MeetupDetails\r\n      address=\"Some Street 5, Some City\"\r\n      title=\"The First Meetup\"\r\n      description=\"This is the first bloody meetup\"\r\n      image=\"https://upload.wikimedia.org/wikipedia/commons/3/3b/Frauenkirche_and_Neues_Rathaus_Munich_March_2013.JPG\"\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://tony:tonybm321@todo.f7ruh.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() }\r\n    }))\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for a single meetup\r\n\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://tony:tonybm321@todo.f7ruh.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetupData: selectedMeetup\r\n    }\r\n  };\r\n}\r\n\r\nexport default MeetupDetail;\r\n"]},"metadata":{},"sourceType":"module"}